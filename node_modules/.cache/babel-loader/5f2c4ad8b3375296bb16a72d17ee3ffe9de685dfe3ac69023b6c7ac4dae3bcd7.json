{"ast":null,"code":"import _objectSpread from\"/workspaces/AI-Powered-Task-Manager/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';// Main App component\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{// Initialize theme from localStorage or default to 'light'\nconst[theme,setTheme]=useState(()=>{const savedTheme=localStorage.getItem('theme');return savedTheme||'light';});// Task structure now includes a 'status' field: 'todo', 'in-progress', 'done'\nconst[tasks,setTasks]=useState([]);const[newTaskText,setNewTaskText]=useState('');const[aiLoadingTaskId,setAiLoadingTaskId]=useState(null);// Tracks which task is being analyzed by AI\nconst[breakdownLoadingTaskId,setBreakdownLoadingTaskId]=useState(null);// Tracks which task is being broken down\n// Effect to apply theme class to the documentElement and save to localStorage\nuseEffect(()=>{document.documentElement.classList.remove('light','dark');document.documentElement.classList.add(theme);localStorage.setItem('theme',theme);},[theme]);// Function to toggle theme between 'light' and 'dark'\nconst toggleTheme=()=>{setTheme(prevTheme=>prevTheme==='light'?'dark':'light');};// Function to add a new task\nconst addTask=()=>{if(newTaskText.trim()!==''){const newId=Date.now();// Simple unique ID\n// New tasks default to 'todo' status\nsetTasks([...tasks,{id:newId,text:newTaskText,completed:false,status:'todo',aiAnalysis:null,aiSubTasks:null,isSubTasksVisible:false}]);setNewTaskText('');}};// Function to toggle task completion status and update status\nconst toggleComplete=id=>{setTasks(tasks.map(task=>{if(task.id===id){// If completing, set status to 'done', otherwise to 'todo' or 'in-progress'\nconst newStatus=!task.completed?'done':'todo';return _objectSpread(_objectSpread({},task),{},{completed:!task.completed,status:newStatus});}return task;}));};// Function to toggle visibility of sub-tasks\nconst toggleSubTasksVisibility=id=>{setTasks(tasks.map(task=>task.id===id?_objectSpread(_objectSpread({},task),{},{isSubTasksVisible:!task.isSubTasksVisible}):task));};// Function to delete a task\nconst deleteTask=id=>{setTasks(tasks.filter(task=>task.id!==id));};// Drag and Drop Handlers\nconst handleDragStart=(e,taskId)=>{e.dataTransfer.setData('taskId',taskId);};const handleDragOver=e=>{e.preventDefault();// Allows dropping\n};const handleDrop=(e,newStatus)=>{const taskId=parseInt(e.dataTransfer.getData('taskId'));setTasks(tasks.map(task=>{if(task.id===taskId){// If moving to 'done', mark as completed, otherwise uncomplete\nconst newCompleted=newStatus==='done'?true:false;return _objectSpread(_objectSpread({},task),{},{status:newStatus,completed:newCompleted});}return task;}));};// Function to analyze a task using AI for category, priority, and notes\nconst analyzeTaskWithAI=async(taskId,taskText)=>{setAiLoadingTaskId(taskId);// Set loading state for this specific task\ntry{let chatHistory=[];const prompt=\"Analyze the following task and provide its category, priority, and any relevant notes in JSON format.\\n      Consider implied deadlines, importance, and workload from the task description to determine the priority.\\n      Categories could include: \\\"Work\\\", \\\"Personal\\\", \\\"Learning\\\", \\\"Health\\\", \\\"Home\\\", \\\"Finance\\\", \\\"Social\\\", \\\"Urgent\\\".\\n      Priorities should be: \\\"High\\\", \\\"Medium\\\", \\\"Low\\\".\\n\\n      Task: \\\"\".concat(taskText,\"\\\"\");chatHistory.push({role:\"user\",parts:[{text:prompt}]});const payload={contents:chatHistory,generationConfig:{responseMimeType:\"application/json\",responseSchema:{type:\"OBJECT\",properties:{\"category\":{\"type\":\"STRING\"},\"priority\":{\"type\":\"STRING\"},\"notes\":{\"type\":\"STRING\"}},propertyOrdering:[\"category\",\"priority\",\"notes\"]}}};// API key is handled by the Canvas environment for gemini-2.0-flash\nconst apiKey=\"\";const apiUrl=\"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=\".concat(apiKey);const response=await fetch(apiUrl,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}const result=await response.json();if(result.candidates&&result.candidates.length>0&&result.candidates[0].content&&result.candidates[0].content.parts&&result.candidates[0].content.parts.length>0){const jsonString=result.candidates[0].content.parts[0].text;const aiAnalysis=JSON.parse(jsonString);setTasks(tasks.map(task=>task.id===taskId?_objectSpread(_objectSpread({},task),{},{aiAnalysis:aiAnalysis}):task));}else{console.error(\"AI response structure is unexpected or content is missing:\",result);setTasks(tasks.map(task=>task.id===taskId?_objectSpread(_objectSpread({},task),{},{aiAnalysis:{category:\"Error\",priority:\"Error\",notes:\"Could not analyze\"}}):task));}}catch(error){console.error(\"Error analyzing task with AI:\",error);setTasks(tasks.map(task=>task.id===taskId?_objectSpread(_objectSpread({},task),{},{aiAnalysis:{category:\"Error\",priority:\"Error\",notes:\"Analysis failed: \".concat(error.message)}}):task));}finally{setAiLoadingTaskId(null);// Clear loading state\n}};// Function to break down a task into sub-tasks using AI\nconst breakdownTaskWithAI=async(taskId,taskText)=>{setBreakdownLoadingTaskId(taskId);// Set loading state for this specific task\ntry{let chatHistory=[];const prompt=\"Break down the following complex task into a list of smaller, actionable sub-tasks.\\n      Return the sub-tasks as a JSON array of strings.\\n\\n      Task: \\\"\".concat(taskText,\"\\\"\");chatHistory.push({role:\"user\",parts:[{text:prompt}]});const payload={contents:chatHistory,generationConfig:{responseMimeType:\"application/json\",responseSchema:{type:\"ARRAY\",items:{\"type\":\"STRING\"}}}};const apiKey=\"\";// API key is handled by the Canvas environment\nconst apiUrl=\"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=\".concat(apiKey);const response=await fetch(apiUrl,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}const result=await response.json();if(result.candidates&&result.candidates.length>0&&result.candidates[0].content&&result.candidates[0].content.parts&&result.candidates[0].content.parts.length>0){const jsonString=result.candidates[0].content.parts[0].text;const aiSubTasks=JSON.parse(jsonString);setTasks(tasks.map(task=>task.id===taskId?_objectSpread(_objectSpread({},task),{},{aiSubTasks:aiSubTasks,isSubTasksVisible:true}):task));}else{console.error(\"AI breakdown response structure is unexpected or content is missing:\",result);setTasks(tasks.map(task=>task.id===taskId?_objectSpread(_objectSpread({},task),{},{aiSubTasks:[\"Could not break down task.\"],isSubTasksVisible:true}):task));}}catch(error){console.error(\"Error breaking down task with AI:\",error);setTasks(tasks.map(task=>task.id===taskId?_objectSpread(_objectSpread({},task),{},{aiSubTasks:[\"Breakdown failed: \".concat(error.message)],isSubTasksVisible:true}):task));}finally{setBreakdownLoadingTaskId(null);// Clear loading state\n}};const renderTaskCard=task=>/*#__PURE__*/_jsxs(\"div\",{draggable:true,onDragStart:e=>handleDragStart(e,task.id),className:\"bg-task-item p-4 rounded-xl shadow-sm border border-gray-200 dark:border-gray-600 transition duration-200 hover:shadow-md mb-4 cursor-grab\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start sm:items-center flex-grow mb-3 w-full\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-checkbox h-6 w-6 text-indigo-600 rounded focus:ring-indigo-500 cursor-pointer flex-shrink-0 mt-1 sm:mt-0\",checked:task.completed,onChange:()=>toggleComplete(task.id)}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-4 text-xl flex-grow \".concat(task.completed?'line-through text-completed-task':'text-task-item'),children:task.text})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col sm:flex-row sm:flex-wrap items-start sm:items-center gap-3 mt-4 sm:mt-0 w-full\",children:[task.aiAnalysis&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm bg-ai-analysis px-3 py-1 rounded-lg font-medium shadow-inner flex-shrink-0 w-full sm:w-auto\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold\",children:\"Cat:\"}),\" \",task.aiAnalysis.category,\" | \",/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold\",children:\"Prio:\"}),\" \",task.aiAnalysis.priority,task.aiAnalysis.notes&&/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-indigo-700 dark:text-indigo-200 mt-1 italic\",children:task.aiAnalysis.notes})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-2 sm:gap-3 flex-grow justify-end\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>analyzeTaskWithAI(task.id,task.text),disabled:aiLoadingTaskId===task.id,className:\"px-3 py-2 text-sm font-medium rounded-lg transition duration-200 whitespace-nowrap\\n              \".concat(aiLoadingTaskId===task.id?'bg-blue-300 text-white cursor-not-allowed':'bg-blue-500 text-white hover:bg-blue-600 shadow-sm'),children:aiLoadingTaskId===task.id?'Analyzing...':'AI Analyze'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>breakdownTaskWithAI(task.id,task.text),disabled:breakdownLoadingTaskId===task.id,className:\"px-3 py-2 text-sm font-medium rounded-lg transition duration-200 whitespace-nowrap\\n              \".concat(breakdownLoadingTaskId===task.id?'bg-green-300 text-white cursor-not-allowed':'bg-green-500 text-white hover:bg-green-600 shadow-sm'),children:breakdownLoadingTaskId===task.id?'Breaking Down...':'Breakdown Task'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>deleteTask(task.id),className:\"px-3 py-2 text-sm font-medium rounded-lg bg-red-500 text-white hover:bg-red-600 shadow-sm transition duration-200 whitespace-nowrap\",children:\"Delete\"})]})]}),task.aiSubTasks&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 w-full bg-subtask-container p-4 rounded-lg border border-gray-200 dark:border-gray-600\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-2\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-semibold text-lg text-subtask\",children:\"AI Suggested Sub-Tasks:\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleSubTasksVisibility(task.id),className:\"text-indigo-600 dark:text-indigo-400 hover:text-indigo-800 dark:hover:text-indigo-300 text-sm font-medium\",children:task.isSubTasksVisible?'Hide':'Show'})]}),task.isSubTasksVisible&&/*#__PURE__*/_jsx(\"ul\",{className:\"list-disc pl-5 text-subtask space-y-1\",children:task.aiSubTasks.map((subTask,index)=>/*#__PURE__*/_jsx(\"li\",{className:\"text-base\",children:subTask},index))})]})]},task.id);return/*#__PURE__*/_jsxs(\"div\",{className:\"\".concat(theme,\" min-h-screen \").concat(theme==='light'?'bg-gradient-to-br from-purple-600 to-indigo-800':'bg-gradient-to-br from-gray-900 to-gray-700',\" p-8 font-inter antialiased transition-colors duration-300\"),children:[/*#__PURE__*/_jsx(\"style\",{children:\"\\n        /* Custom styles for light/dark mode transitions */\\n        /* These styles could also be moved to index.css and configured via Tailwind's @apply directives */\\n        .light .bg-container { background-color: white; }\\n        .light .text-primary { color: #1f2937; /* gray-900 */ }\\n        .light .bg-task-item { background-color: #f9fafb; /* gray-50 */ border-color: #e5e7eb; /* gray-200 */ }\\n        .light .text-task-item { color: #1f2937; /* gray-800 */ }\\n        .light .text-completed-task { color: #6b7280; /* gray-500 */ }\\n        .light .bg-input-border { border-color: #d1d5db; /* gray-300 */ }\\n        .light .focus-ring-input { border-color: #6366f1; /* indigo-500 */ }\\n        .light .text-placeholder { color: #9ca3af; /* gray-400 */ }\\n        .light .bg-ai-analysis { background-color: #e0e7ff; /* indigo-100 */ color: #3730a3; /* indigo-800 */ }\\n        .light .bg-subtask-container { background-color: #f3f4f6; /* gray-100 */ border-color: #e5e7eb; /* gray-200 */ }\\n        .light .text-subtask { color: #374151; /* gray-700 */ }\\n        .light .kanban-column-bg { background-color: #f3f4f6; /* gray-100 */ }\\n        .light .kanban-column-border { border-color: #e5e7eb; /* gray-200 */ }\\n        .light .kanban-header-text { color: #1f2937; /* gray-900 */ }\\n\\n        .dark .bg-container { background-color: #1f2937; /* gray-900 */ }\\n        .dark .text-primary { color: #f3f4f6; /* gray-100 */ }\\n        .dark .bg-task-item { background-color: #374151; /* gray-700 */ border-color: #4b5563; /* gray-600 */ }\\n        .dark .text-task-item { color: #f3f4f6; /* gray-100 */ }\\n        .dark .text-completed-task { color: #9ca3af; /* gray-400 */ }\\n        .dark .bg-input-border { border-color: #4b5563; /* gray-600 */ background-color: #374151; /* gray-700 */ color: #f3f4f6; /* gray-100 */ }\\n        .dark .focus-ring-input { border-color: #818cf8; /* indigo-400 */ }\\n        .dark .text-placeholder { color: #6b7280; /* gray-500 */ }\\n        .dark .bg-ai-analysis { background-color: #4338ca; /* indigo-700 */ color: #e0e7ff; /* indigo-100 */ }\\n        .dark .bg-subtask-container { background-color: #374151; /* gray-700 */ border-color: #4b5563; /* gray-600 */ }\\n        .dark .text-subtask { color: #d1d5db; /* gray-300 */ }\\n        .dark .kanban-column-bg { background-color: #374151; /* gray-700 */ }\\n        .dark .kanban-column-border { border-color: #4b5563; /* gray-600 */ }\\n        .dark .kanban-header-text { color: #f3f4f6; /* gray-100 */ }\\n      \"}),/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-6xl mx-auto bg-container rounded-3xl shadow-xl p-8 sm:p-10 transition-colors duration-300\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-8\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-4xl font-bold text-primary\",children:\"AI-Powered Task Manager\"}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleTheme,className:\"p-3 rounded-full bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-100 shadow-md hover:bg-gray-300 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 dark:focus:ring-indigo-400 transition-colors duration-300\",\"aria-label\":\"Toggle light/dark mode\",children:theme==='light'?/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"h-6 w-6\",fill:\"none\",viewBox:\"0 0 24 24\",stroke:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M12 3v1m0 16v1m9-9h1M3 12h1m15.325-4.275l-.707-.707M4.372 19.325l-.707-.707m12.728 0l.707-.707M6.343 6.343l-.707-.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\"})}):/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"h-6 w-6\",fill:\"none\",viewBox:\"0 0 24 24\",stroke:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9 9 0 008.354-5.646z\"})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col sm:flex-row gap-4 mb-8\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"flex-grow p-4 bg-input-border border rounded-xl focus:outline-none focus-ring-input transition duration-200 text-lg text-primary placeholder-text-placeholder\",placeholder:\"Add a new task...\",value:newTaskText,onChange:e=>setNewTaskText(e.target.value),onKeyPress:e=>{if(e.key==='Enter'){addTask();}}}),/*#__PURE__*/_jsx(\"button\",{onClick:addTask,className:\"px-6 py-4 bg-indigo-600 text-white font-semibold rounded-xl shadow-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 transition duration-200 text-lg whitespace-nowrap\",children:\"Add Task\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-6\",children:['todo','in-progress','done'].map(status=>/*#__PURE__*/_jsxs(\"div\",{onDragOver:handleDragOver,onDrop:e=>handleDrop(e,status),className:\"kanban-column-bg p-5 rounded-2xl shadow-lg border kanban-column-border min-h-[300px]\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"text-2xl font-bold mb-6 capitalize text-center kanban-header-text\",children:[status.replace('-',' '),\" (\",tasks.filter(task=>task.status===status).length,\")\"]}),tasks.filter(task=>task.status===status).map(task=>renderTaskCard(task)),tasks.filter(task=>task.status===status).length===0&&/*#__PURE__*/_jsx(\"p\",{className:\"text-center text-gray-500 dark:text-gray-400 italic\",children:\"Drag tasks here or add new ones!\"})]},status))})]})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","App","theme","setTheme","savedTheme","localStorage","getItem","tasks","setTasks","newTaskText","setNewTaskText","aiLoadingTaskId","setAiLoadingTaskId","breakdownLoadingTaskId","setBreakdownLoadingTaskId","document","documentElement","classList","remove","add","setItem","toggleTheme","prevTheme","addTask","trim","newId","Date","now","id","text","completed","status","aiAnalysis","aiSubTasks","isSubTasksVisible","toggleComplete","map","task","newStatus","_objectSpread","toggleSubTasksVisibility","deleteTask","filter","handleDragStart","e","taskId","dataTransfer","setData","handleDragOver","preventDefault","handleDrop","parseInt","getData","newCompleted","analyzeTaskWithAI","taskText","chatHistory","prompt","concat","push","role","parts","payload","contents","generationConfig","responseMimeType","responseSchema","type","properties","propertyOrdering","apiKey","apiUrl","response","fetch","method","headers","body","JSON","stringify","ok","Error","result","json","candidates","length","content","jsonString","parse","console","error","category","priority","notes","message","breakdownTaskWithAI","items","renderTaskCard","draggable","onDragStart","className","children","checked","onChange","onClick","disabled","subTask","index","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","placeholder","value","target","onKeyPress","key","onDragOver","onDrop","replace"],"sources":["/workspaces/AI-Powered-Task-Manager/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\n// Main App component\nconst App = () => {\n  // Initialize theme from localStorage or default to 'light'\n  const [theme, setTheme] = useState(() => {\n    const savedTheme = localStorage.getItem('theme');\n    return savedTheme || 'light';\n  });\n\n  // Task structure now includes a 'status' field: 'todo', 'in-progress', 'done'\n  const [tasks, setTasks] = useState([]);\n  const [newTaskText, setNewTaskText] = useState('');\n  const [aiLoadingTaskId, setAiLoadingTaskId] = useState(null); // Tracks which task is being analyzed by AI\n  const [breakdownLoadingTaskId, setBreakdownLoadingTaskId] = useState(null); // Tracks which task is being broken down\n\n  // Effect to apply theme class to the documentElement and save to localStorage\n  useEffect(() => {\n    document.documentElement.classList.remove('light', 'dark');\n    document.documentElement.classList.add(theme);\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n\n  // Function to toggle theme between 'light' and 'dark'\n  const toggleTheme = () => {\n    setTheme(prevTheme => (prevTheme === 'light' ? 'dark' : 'light'));\n  };\n\n  // Function to add a new task\n  const addTask = () => {\n    if (newTaskText.trim() !== '') {\n      const newId = Date.now(); // Simple unique ID\n      // New tasks default to 'todo' status\n      setTasks([...tasks, { id: newId, text: newTaskText, completed: false, status: 'todo', aiAnalysis: null, aiSubTasks: null, isSubTasksVisible: false }]);\n      setNewTaskText('');\n    }\n  };\n\n  // Function to toggle task completion status and update status\n  const toggleComplete = (id) => {\n    setTasks(tasks.map(task => {\n      if (task.id === id) {\n        // If completing, set status to 'done', otherwise to 'todo' or 'in-progress'\n        const newStatus = !task.completed ? 'done' : 'todo';\n        return { ...task, completed: !task.completed, status: newStatus };\n      }\n      return task;\n    }));\n  };\n\n  // Function to toggle visibility of sub-tasks\n  const toggleSubTasksVisibility = (id) => {\n    setTasks(tasks.map(task =>\n      task.id === id ? { ...task, isSubTasksVisible: !task.isSubTasksVisible } : task\n    ));\n  };\n\n  // Function to delete a task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  // Drag and Drop Handlers\n  const handleDragStart = (e, taskId) => {\n    e.dataTransfer.setData('taskId', taskId);\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault(); // Allows dropping\n  };\n\n  const handleDrop = (e, newStatus) => {\n    const taskId = parseInt(e.dataTransfer.getData('taskId'));\n    setTasks(tasks.map(task => {\n      if (task.id === taskId) {\n        // If moving to 'done', mark as completed, otherwise uncomplete\n        const newCompleted = newStatus === 'done' ? true : false;\n        return { ...task, status: newStatus, completed: newCompleted };\n      }\n      return task;\n    }));\n  };\n\n  // Function to analyze a task using AI for category, priority, and notes\n  const analyzeTaskWithAI = async (taskId, taskText) => {\n    setAiLoadingTaskId(taskId); // Set loading state for this specific task\n    try {\n      let chatHistory = [];\n      const prompt = `Analyze the following task and provide its category, priority, and any relevant notes in JSON format.\n      Consider implied deadlines, importance, and workload from the task description to determine the priority.\n      Categories could include: \"Work\", \"Personal\", \"Learning\", \"Health\", \"Home\", \"Finance\", \"Social\", \"Urgent\".\n      Priorities should be: \"High\", \"Medium\", \"Low\".\n\n      Task: \"${taskText}\"`;\n\n      chatHistory.push({ role: \"user\", parts: [{ text: prompt }] });\n\n      const payload = {\n        contents: chatHistory,\n        generationConfig: {\n          responseMimeType: \"application/json\",\n          responseSchema: {\n            type: \"OBJECT\",\n            properties: {\n              \"category\": { \"type\": \"STRING\" },\n              \"priority\": { \"type\": \"STRING\" },\n              \"notes\": { \"type\": \"STRING\" }\n            },\n            propertyOrdering: [\"category\", \"priority\", \"notes\"]\n          }\n        }\n      };\n\n      // API key is handled by the Canvas environment for gemini-2.0-flash\n      const apiKey = \"\";\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;\n\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload)\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const result = await response.json();\n\n      if (result.candidates && result.candidates.length > 0 &&\n          result.candidates[0].content && result.candidates[0].content.parts &&\n          result.candidates[0].content.parts.length > 0) {\n        const jsonString = result.candidates[0].content.parts[0].text;\n        const aiAnalysis = JSON.parse(jsonString);\n\n        setTasks(tasks.map(task =>\n          task.id === taskId ? { ...task, aiAnalysis: aiAnalysis } : task\n        ));\n      } else {\n        console.error(\"AI response structure is unexpected or content is missing:\", result);\n        setTasks(tasks.map(task =>\n            task.id === taskId ? { ...task, aiAnalysis: { category: \"Error\", priority: \"Error\", notes: \"Could not analyze\" } } : task\n        ));\n      }\n    } catch (error) {\n      console.error(\"Error analyzing task with AI:\", error);\n      setTasks(tasks.map(task =>\n          task.id === taskId ? { ...task, aiAnalysis: { category: \"Error\", priority: \"Error\", notes: `Analysis failed: ${error.message}` } } : task\n      ));\n    } finally {\n      setAiLoadingTaskId(null); // Clear loading state\n    }\n  };\n\n  // Function to break down a task into sub-tasks using AI\n  const breakdownTaskWithAI = async (taskId, taskText) => {\n    setBreakdownLoadingTaskId(taskId); // Set loading state for this specific task\n    try {\n      let chatHistory = [];\n      const prompt = `Break down the following complex task into a list of smaller, actionable sub-tasks.\n      Return the sub-tasks as a JSON array of strings.\n\n      Task: \"${taskText}\"`;\n\n      chatHistory.push({ role: \"user\", parts: [{ text: prompt }] });\n\n      const payload = {\n        contents: chatHistory,\n        generationConfig: {\n          responseMimeType: \"application/json\",\n          responseSchema: {\n            type: \"ARRAY\",\n            items: { \"type\": \"STRING\" }\n          }\n        }\n      };\n\n      const apiKey = \"\"; // API key is handled by the Canvas environment\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;\n\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload)\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const result = await response.json();\n\n      if (result.candidates && result.candidates.length > 0 &&\n          result.candidates[0].content && result.candidates[0].content.parts &&\n          result.candidates[0].content.parts.length > 0) {\n        const jsonString = result.candidates[0].content.parts[0].text;\n        const aiSubTasks = JSON.parse(jsonString);\n\n        setTasks(tasks.map(task =>\n          task.id === taskId ? { ...task, aiSubTasks: aiSubTasks, isSubTasksVisible: true } : task\n        ));\n      } else {\n        console.error(\"AI breakdown response structure is unexpected or content is missing:\", result);\n        setTasks(tasks.map(task =>\n            task.id === taskId ? { ...task, aiSubTasks: [\"Could not break down task.\"], isSubTasksVisible: true } : task\n        ));\n      }\n    } catch (error) {\n      console.error(\"Error breaking down task with AI:\", error);\n      setTasks(tasks.map(task =>\n          task.id === taskId ? { ...task, aiSubTasks: [`Breakdown failed: ${error.message}`], isSubTasksVisible: true } : task\n      ));\n    } finally {\n      setBreakdownLoadingTaskId(null); // Clear loading state\n    }\n  };\n\n  const renderTaskCard = (task) => (\n    <div\n      key={task.id}\n      draggable\n      onDragStart={(e) => handleDragStart(e, task.id)}\n      className=\"bg-task-item p-4 rounded-xl shadow-sm border border-gray-200 dark:border-gray-600 transition duration-200 hover:shadow-md mb-4 cursor-grab\"\n    >\n      {/* Main Task Text and Checkbox */}\n      <div className=\"flex items-start sm:items-center flex-grow mb-3 w-full\">\n        <input\n          type=\"checkbox\"\n          className=\"form-checkbox h-6 w-6 text-indigo-600 rounded focus:ring-indigo-500 cursor-pointer flex-shrink-0 mt-1 sm:mt-0\"\n          checked={task.completed}\n          onChange={() => toggleComplete(task.id)}\n        />\n        <span className={`ml-4 text-xl flex-grow ${task.completed ? 'line-through text-completed-task' : 'text-task-item'}`}>\n          {task.text}\n        </span>\n      </div>\n\n      {/* AI Analysis and Action Buttons */}\n      <div className=\"flex flex-col sm:flex-row sm:flex-wrap items-start sm:items-center gap-3 mt-4 sm:mt-0 w-full\">\n        {task.aiAnalysis && (\n          <div className=\"text-sm bg-ai-analysis px-3 py-1 rounded-lg font-medium shadow-inner flex-shrink-0 w-full sm:w-auto\">\n            <span className=\"font-semibold\">Cat:</span> {task.aiAnalysis.category} | <span className=\"font-semibold\">Prio:</span> {task.aiAnalysis.priority}\n            {task.aiAnalysis.notes && <p className=\"text-xs text-indigo-700 dark:text-indigo-200 mt-1 italic\">{task.aiAnalysis.notes}</p>}\n          </div>\n        )}\n\n        {/* Group buttons for better control and spacing */}\n        <div className=\"flex flex-wrap gap-2 sm:gap-3 flex-grow justify-end\">\n          <button\n            onClick={() => analyzeTaskWithAI(task.id, task.text)}\n            disabled={aiLoadingTaskId === task.id}\n            className={`px-3 py-2 text-sm font-medium rounded-lg transition duration-200 whitespace-nowrap\n              ${aiLoadingTaskId === task.id\n                ? 'bg-blue-300 text-white cursor-not-allowed'\n                : 'bg-blue-500 text-white hover:bg-blue-600 shadow-sm'\n              }`}\n          >\n            {aiLoadingTaskId === task.id ? 'Analyzing...' : 'AI Analyze'}\n          </button>\n\n          <button\n            onClick={() => breakdownTaskWithAI(task.id, task.text)}\n            disabled={breakdownLoadingTaskId === task.id}\n            className={`px-3 py-2 text-sm font-medium rounded-lg transition duration-200 whitespace-nowrap\n              ${breakdownLoadingTaskId === task.id\n                ? 'bg-green-300 text-white cursor-not-allowed'\n                : 'bg-green-500 text-white hover:bg-green-600 shadow-sm'\n              }`}\n          >\n            {breakdownLoadingTaskId === task.id ? 'Breaking Down...' : 'Breakdown Task'}\n          </button>\n\n          <button\n            onClick={() => deleteTask(task.id)}\n            className=\"px-3 py-2 text-sm font-medium rounded-lg bg-red-500 text-white hover:bg-red-600 shadow-sm transition duration-200 whitespace-nowrap\"\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n\n      {/* AI Sub-Tasks Section */}\n      {task.aiSubTasks && (\n        <div className=\"mt-4 w-full bg-subtask-container p-4 rounded-lg border border-gray-200 dark:border-gray-600\">\n          <div className=\"flex justify-between items-center mb-2\">\n            <h4 className=\"font-semibold text-lg text-subtask\">AI Suggested Sub-Tasks:</h4>\n            <button\n              onClick={() => toggleSubTasksVisibility(task.id)}\n              className=\"text-indigo-600 dark:text-indigo-400 hover:text-indigo-800 dark:hover:text-indigo-300 text-sm font-medium\"\n            >\n              {task.isSubTasksVisible ? 'Hide' : 'Show'}\n            </button>\n          </div>\n          {task.isSubTasksVisible && (\n            <ul className=\"list-disc pl-5 text-subtask space-y-1\">\n              {task.aiSubTasks.map((subTask, index) => (\n                <li key={index} className=\"text-base\">{subTask}</li>\n              ))}\n            </ul>\n          )}\n        </div>\n      )}\n    </div>\n  );\n\n  return (\n    <div className={`${theme} min-h-screen ${theme === 'light' ? 'bg-gradient-to-br from-purple-600 to-indigo-800' : 'bg-gradient-to-br from-gray-900 to-gray-700'} p-8 font-inter antialiased transition-colors duration-300`}>\n      {/* Tailwind CSS is loaded in public/index.html */}\n      {/* Inter font is loaded in public/index.html */}\n      <style>{`\n        /* Custom styles for light/dark mode transitions */\n        /* These styles could also be moved to index.css and configured via Tailwind's @apply directives */\n        .light .bg-container { background-color: white; }\n        .light .text-primary { color: #1f2937; /* gray-900 */ }\n        .light .bg-task-item { background-color: #f9fafb; /* gray-50 */ border-color: #e5e7eb; /* gray-200 */ }\n        .light .text-task-item { color: #1f2937; /* gray-800 */ }\n        .light .text-completed-task { color: #6b7280; /* gray-500 */ }\n        .light .bg-input-border { border-color: #d1d5db; /* gray-300 */ }\n        .light .focus-ring-input { border-color: #6366f1; /* indigo-500 */ }\n        .light .text-placeholder { color: #9ca3af; /* gray-400 */ }\n        .light .bg-ai-analysis { background-color: #e0e7ff; /* indigo-100 */ color: #3730a3; /* indigo-800 */ }\n        .light .bg-subtask-container { background-color: #f3f4f6; /* gray-100 */ border-color: #e5e7eb; /* gray-200 */ }\n        .light .text-subtask { color: #374151; /* gray-700 */ }\n        .light .kanban-column-bg { background-color: #f3f4f6; /* gray-100 */ }\n        .light .kanban-column-border { border-color: #e5e7eb; /* gray-200 */ }\n        .light .kanban-header-text { color: #1f2937; /* gray-900 */ }\n\n        .dark .bg-container { background-color: #1f2937; /* gray-900 */ }\n        .dark .text-primary { color: #f3f4f6; /* gray-100 */ }\n        .dark .bg-task-item { background-color: #374151; /* gray-700 */ border-color: #4b5563; /* gray-600 */ }\n        .dark .text-task-item { color: #f3f4f6; /* gray-100 */ }\n        .dark .text-completed-task { color: #9ca3af; /* gray-400 */ }\n        .dark .bg-input-border { border-color: #4b5563; /* gray-600 */ background-color: #374151; /* gray-700 */ color: #f3f4f6; /* gray-100 */ }\n        .dark .focus-ring-input { border-color: #818cf8; /* indigo-400 */ }\n        .dark .text-placeholder { color: #6b7280; /* gray-500 */ }\n        .dark .bg-ai-analysis { background-color: #4338ca; /* indigo-700 */ color: #e0e7ff; /* indigo-100 */ }\n        .dark .bg-subtask-container { background-color: #374151; /* gray-700 */ border-color: #4b5563; /* gray-600 */ }\n        .dark .text-subtask { color: #d1d5db; /* gray-300 */ }\n        .dark .kanban-column-bg { background-color: #374151; /* gray-700 */ }\n        .dark .kanban-column-border { border-color: #4b5563; /* gray-600 */ }\n        .dark .kanban-header-text { color: #f3f4f6; /* gray-100 */ }\n      `}</style>\n\n      <div className=\"max-w-6xl mx-auto bg-container rounded-3xl shadow-xl p-8 sm:p-10 transition-colors duration-300\">\n        <div className=\"flex justify-between items-center mb-8\">\n          <h1 className=\"text-4xl font-bold text-primary\">\n            AI-Powered Task Manager\n          </h1>\n          <button\n            onClick={toggleTheme}\n            className=\"p-3 rounded-full bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-100 shadow-md hover:bg-gray-300 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 dark:focus:ring-indigo-400 transition-colors duration-300\"\n            aria-label=\"Toggle light/dark mode\"\n          >\n            {theme === 'light' ? (\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 3v1m0 16v1m9-9h1M3 12h1m15.325-4.275l-.707-.707M4.372 19.325l-.707-.707m12.728 0l.707-.707M6.343 6.343l-.707-.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\n              </svg>\n            ) : (\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9 9 0 008.354-5.646z\" />\n              </svg>\n            )}\n          </button>\n        </div>\n\n        {/* Task Input Section */}\n        <div className=\"flex flex-col sm:flex-row gap-4 mb-8\">\n          <input\n            type=\"text\"\n            className=\"flex-grow p-4 bg-input-border border rounded-xl focus:outline-none focus-ring-input transition duration-200 text-lg text-primary placeholder-text-placeholder\"\n            placeholder=\"Add a new task...\"\n            value={newTaskText}\n            onChange={(e) => setNewTaskText(e.target.value)}\n            onKeyPress={(e) => {\n              if (e.key === 'Enter') {\n                addTask();\n              }\n            }}\n          />\n          <button\n            onClick={addTask}\n            className=\"px-6 py-4 bg-indigo-600 text-white font-semibold rounded-xl shadow-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 transition duration-200 text-lg whitespace-nowrap\"\n          >\n            Add Task\n          </button>\n        </div>\n\n        {/* Kanban Board Section */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          {['todo', 'in-progress', 'done'].map((status) => (\n            <div\n              key={status}\n              onDragOver={handleDragOver}\n              onDrop={(e) => handleDrop(e, status)}\n              className=\"kanban-column-bg p-5 rounded-2xl shadow-lg border kanban-column-border min-h-[300px]\"\n            >\n              <h2 className=\"text-2xl font-bold mb-6 capitalize text-center kanban-header-text\">\n                {status.replace('-', ' ')} ({tasks.filter(task => task.status === status).length})\n              </h2>\n              {tasks\n                .filter((task) => task.status === status)\n                .map((task) => renderTaskCard(task))}\n              {tasks.filter(task => task.status === status).length === 0 && (\n                <p className=\"text-center text-gray-500 dark:text-gray-400 italic\">Drag tasks here or add new ones!</p>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}